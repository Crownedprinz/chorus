//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chorus.Properties {
	using System;


	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	public class AnnotationImages {

		private static global::System.Resources.ResourceManager resourceMan;

		private static global::System.Globalization.CultureInfo resourceCulture;

		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal AnnotationImages() {
		}

		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chorus.Properties.AnnotationImages", typeof(AnnotationImages).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}

		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}

		public static System.Drawing.Bitmap approve16x16 {
			get {
				object obj = ResourceManager.GetObject("approve16x16", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap approve32x32 {
			get {
				object obj = ResourceManager.GetObject("approve32x32", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap generic16x16 {
			get {
				object obj = ResourceManager.GetObject("generic16x16", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap generic32x32 {
			get {
				object obj = ResourceManager.GetObject("generic32x32", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Parameter is null or an empty string..
		/// </summary>
		public static string kNullOrEmptyString {
			get {
				return ResourceManager.GetString("kNullOrEmptyString", resourceCulture);
			}
		}

		public static System.Drawing.Bitmap MergeConflict16x16 {
			get {
				object obj = ResourceManager.GetObject("MergeConflict16x16", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap MergeConflict16x16Closed {
			get {
				object obj = ResourceManager.GetObject("MergeConflict16x16Closed", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap MergeConflict32x32 {
			get {
				object obj = ResourceManager.GetObject("MergeConflict32x32", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap note16x16 {
			get {
				object obj = ResourceManager.GetObject("note16x16", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap note32x32 {
			get {
				object obj = ResourceManager.GetObject("note32x32", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap question16x16 {
			get {
				object obj = ResourceManager.GetObject("question16x16", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap question16x16Closed {
			get {
				object obj = ResourceManager.GetObject("question16x16Closed", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}

		public static System.Drawing.Bitmap question32x32 {
			get {
				object obj = ResourceManager.GetObject("question32x32", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
	}
}
